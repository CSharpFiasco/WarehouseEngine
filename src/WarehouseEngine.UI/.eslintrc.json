{
    "root": true,
    "ignorePatterns": ["projects/**/*"],
    "plugins": ["unused-imports"],
    "overrides": [
        {
            "files": ["*.ts"],
            "parserOptions": {
                "project": ["tsconfig.(app|spec).json"]
            },
            "extends": [
                "eslint:recommended",
                "plugin:@typescript-eslint/recommended",
                "plugin:@typescript-eslint/strict",
                "plugin:@angular-eslint/recommended",
                "plugin:@angular-eslint/template/process-inline-templates"
            ],
            "rules": {
                "@angular-eslint/directive-selector": [
                    "error",
                    {
                        "type": "attribute",
                        "prefix": "app",
                        "style": "camelCase"
                    }
                ],
                "@angular-eslint/component-selector": [
                    "error",
                    {
                        "type": "element",
                        "prefix": "app",
                        "style": "kebab-case"
                    }
                ],
                "@typescript-eslint/no-extraneous-class": [
                    "error",
                    {
                        "allowWithDecorator": true
                    }
                ],
                "@typescript-eslint/no-dupe-class-members": "error",
                "@typescript-eslint/no-unused-expressions": "error",
                "@typescript-eslint/no-use-before-define": "error",
                "@typescript-eslint/prefer-readonly": "error",
                "@typescript-eslint/strict-boolean-expressions": "warn",
                "@angular-eslint/prefer-output-readonly": "error",
                "@angular-eslint/no-pipe-impure": "error",
                "@angular-eslint/no-conflicting-lifecycle": "warn",

                "@typescript-eslint/no-unused-vars": "off", // disable the base rule as the following no-unused can report and fix errors
                "unused-imports/no-unused-imports": "error",
                "unused-imports/no-unused-vars": [
                    "warn",
                    { "vars": "all", "varsIgnorePattern": "^_", "args": "after-used", "argsIgnorePattern": "^_" }
                ]
            }
        },
        {
            "files": ["*.html"],
            "extends": ["plugin:@angular-eslint/template/recommended", "plugin:@angular-eslint/template/accessibility"],
            "rules": {
                "@angular-eslint/template/eqeqeq": [
                    "error",
                    {
                        "allowNullOrUndefined": true
                    }
                ],
                "@angular-eslint/template/conditional-complexity": [
                    "error",
                    {
                        "maxComplexity": 3
                    }
                ],
                "@angular-eslint/template/no-call-expression": "error",
                "@angular-eslint/template/no-inline-styles": "warn",
                "@angular-eslint/template/no-duplicate-attributes": "error",
                "@angular-eslint/template/attributes-order": "warn"
            }
        }
    ]
}
